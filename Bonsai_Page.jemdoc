# jemdoc: menu{MENU}{example.html}
= Machine learning On Device for Internet of Things (IoT) Applications
\-Ashish Kumar, Saurabh Goyal, Manik Varma, Prateek Jain

The growth of the Internet of Things(IoT) ecosystem is expected to add 15 billion smart devices to the world by 2020 (current count is roughly 5 billion). It would be typical of these devices to have low memory and compute power and would require low latency and low battery consumption. Application domains like Argriculture and walking cane for visually impaired which might have erratic cloud access,  and other applications like healthcare, which have several privacy issues necessitate prediction on the IoT device itself. Low end IoT devices, like Arduino Uno and Micro:Bit, typically have 2KB to 16KB of RAM (after we exclude the space for prediction code, driver code and feature extractor). Thus, to have prediction on device, the model to be used for prediction should fit in this range. 

To solve this challenging problem of doing ML in 2-16KB, we have proposed Bonsai - a sparse low rank tree based non-linear binary classifier. We implemented a hard thresholding based optimization routine to jointly learn sparse low rank projection and model parameters. Experiments on 8 datasets show that Bonsai achieves accuracy of uncompressed SVMs, Neural Nets, kNN in just 16KB and shows gains upto 15\% within 2KB over state-of-art compressed Neural Nets ([https://arxiv.org/pdf/1510.00149v5.pdf Deep Compression]), kNNs ([http://jmlr.org/proceedings/papers/v32/kusner14.pdf SNC]), Decision Trees ([https://www.microsoft.com/en-us/research/publication/decision-jungles-compact-and-rich-models-for-classification/ Decision Jungle] and [http://jmlr.org/proceedings/papers/v37/nan15.pdf BudgetRF]) and SVMs ([https://manikvarma.github.io/code/LDKL/download.html LDKL]). 

We have implemented an optimized version of Bonsai prediction code on Arduino Uno, using function approximations, compiler optimizations and fixed point operations. Bonsai additionally has the property that it needs to stream through the feature vector only once, thus avoiding the need to store the feature vector in an already limited RAM. We also plan to build a working demo of Bonsai for currency detection. For this, we have written an optimzed driver code for interfacing OV7670 camera to Arduino uno.

We will be submitting this work to ICML-2017. Currently we are extending Bonsai to multiclass classification and anomoly detection.
